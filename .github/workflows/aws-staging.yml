on:
  push:
    branches:
      - master

name: Deploy to AWS Staging

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      AWS_REGION: eu-central-1
      SERVICE_NAME: stagingcache-staging
      CLUSTER_NAME: oasis-borrow-cache-staging

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        SHA_TAG: ${{ github.sha }}
        LATEST_TAG: latest
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$SERVICE_NAME:$SHA_TAG -t $ECR_REGISTRY/$SERVICE_NAME:$LATEST_TAG .
        docker push $ECR_REGISTRY/$SERVICE_NAME:$SHA_TAG

    - name: Update ${{ env.SERVICE_NAME }}-etl ECS service with latest Docker image
      id: service-update-etl
      run: |
        aws ecs update-service --cluster $CLUSTER_NAME  --service ${{ env.SERVICE_NAME }}-etl --force-new-deployment  --endpoint https://ecs.eu-central-1.amazonaws.com --region $AWS_REGION
        aws ecs wait services-stable --cluster $CLUSTER_NAME --service ${{ env.SERVICE_NAME }}-etl

    - name: Update ${{ env.SERVICE_NAME }}-api ECS service with latest Docker image
      id: service-update-api
      run: |
        aws ecs update-service --cluster $CLUSTER_NAME  --service ${{ env.SERVICE_NAME }}-api --force-new-deployment  --endpoint https://ecs.eu-central-1.amazonaws.com --region $AWS_REGION
        aws ecs wait services-stable --cluster $CLUSTER_NAME --service ${{ env.SERVICE_NAME }}-api
